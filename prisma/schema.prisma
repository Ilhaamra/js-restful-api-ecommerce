generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  user_key   String    @unique @default(uuid()) @db.VarChar(255)
  first_name String    @db.VarChar(50)
  last_name  String?   @db.VarChar(50)
  email      String    @unique @db.VarChar(50)
  password   String    @db.VarChar(255)
  phone      String?   @unique @db.VarChar(20)
  role       Role      @default(Customer)
  avatar     String?
  addresses  Address[]
  products   Product[]

  @@map("users")
}

model Address {
  id           Int     @id @default(autoincrement())
  address_key  String  @unique @default(uuid()) @db.VarChar(255)
  street       String  @db.VarChar(200)
  city         String  @db.VarChar(50)
  postalcode   String? @db.VarChar(15)
  address_name String  @db.VarChar(100)
  country      String  @db.VarChar(50)
  province     String  @db.VarChar(50)
  userId       String
  user         User    @relation(fields: [userId], references: [user_key])

  @@map("addresses")
}

model Category {
  id            Int       @id @default(autoincrement())
  category_name String    @db.VarChar(100)
  products      Product[]

  @@map("categories")
}

model Product {
  id           Int      @id @default(autoincrement())
  product_name String   @db.VarChar(200)
  price        Float
  quantity     Int      @default(0)
  description  String?
  image        String?
  categoryId   Int
  merchantId   String
  category     Category @relation(fields: [categoryId], references: [id])
  user         User     @relation(fields: [merchantId], references: [user_key])
  Image        Image[]

  @@map("products")
}

model Image {
  id           Int     @id @default(autoincrement())
  originalname String  @db.VarChar()
  image_file   String  @db.VarChar()
  productId    Int
  product      Product @relation(fields: [productId], references: [id])

  @@map("images")
}

enum Role {
  Admin
  Customer
  Merchant
}
